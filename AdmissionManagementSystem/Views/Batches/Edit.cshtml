@model AdmissionManagementSystem.Models.Batch

@{
    ViewBag.Title = "Edit";
}
<script src="@Url.Content("~/Scripts/jquery.timepicker.js")"></script>
<link href="@Url.Content("~/Content/jquery.timepicker.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/datepair.js")"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="form-horizontal">
            <h4>Batch</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.BatchId)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>*@

    <div class="form-horizontal">
        <div class="page-header">
            <h2>Edit Batch</h2>
        </div>
        @Html.HiddenFor(model => model.BatchId)
        @Html.HiddenFor(model => model.Course_Id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Course_Id, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.Course_Id, new SelectList(Model.LstCourse, "Value", "Text"), new { @class = "form-control",@disabled= "disabled"})
                @Html.ValidationMessageFor(model => model.Course_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">

                <div class="input-group date" data-date-format="mm-dd-yyyy">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control start",@Value=Model.StartDate.ToString("MM-dd-yyyy"), @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    <div class="input-group-addon">
                        <span class="glyphicon glyphicon-th"></span>
                    </div>
                </div>

            </div>
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group date" data-date-format="mm-dd-yyyy">

                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control end", @Value = Model.EndDate.ToString("MM-dd-yyyy"),@readonly="true" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    <div class="input-group-addon">
                        <span class="glyphicon glyphicon-th"></span>
                    </div>
                </div>

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.csvDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 " style="margin-top:5px">
                @foreach (var item in Model.WeekDaysList)
                {
                    if (item.Selected)
                    { <input type="checkbox" name="Selected" value="@item.Value" checked />}
                    else
                    {<input type="checkbox" name="Selected" value="@item.Value" /> }
                    <label>@item.Text</label>

                }

                <p> @Html.ValidationMessageFor(model => model.csvDays, "", new { @class = "text-danger" })</p>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="basicExample">

                <div class="col-md-2">
                    <input type="text" class="time start form-control col-md-2" placeholder="From" />
                </div>

                <div class="col-md-2">
                    <input type="text" class="time end form-control col-md-2" placeholder="To" />
                </div>
                @Html.HiddenFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-gray" onclick="return check();" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<link rel="stylesheet" href="@Url.Content("~/Content/datepicker.min.css")" />
<script src="@Url.Content("~/Scripts/bootstrap-datepicker.min.js")"></script>
<script>
    // initialize input widgets first
    $('#basicExample .time').timepicker({
        'showDuration': true,
        'timeFormat': 'g:ia'
    });

    var basicExampleEl = document.getElementById('basicExample');
    var datepair = new Datepair(basicExampleEl);
    $('.input-group.date').datepicker({ autoclose: true, format: "mm-dd-yyyy" });
    
    function check() {




        var start = $(".start").val();
        var end = $(".end").val();

        if (new Date(Date.parse(start)) >= new Date(Date.parse(end))) {
            alert('Start date cannot be greater that end date.');
            return false;
        }
        else {
            var vals = start + " To " + end;
            $("#Time").val(vals);

            return true;
        }
    }

   

</script>
